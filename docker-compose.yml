version: '3.7'

services:

# ----------------------------------------------------------------------------------------------
  jupyter:
    image: jupyter/minimal-notebook
    ports:
      - 8888:8888
    command: ["start-notebook.sh",
              "--NotebookApp.token=''",
              "--NotebookApp.password=''"]

# ----------------------------------------------------------------------------------------------
  neo4j:
      hostname: neo4j
      image: neo4j:4.4.17-community
      environment:
          - NEO4J_dbms_mode=SINGLE
          - NEO4J_dbms_connector_bolt_advertised__address=localhost:7687
          - NEO4J_dbms_default__listen__address=0.0.0.0
          - NEO4J_dbms_default__advertised__address=localhost
          - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
          - NEO4J_AUTH=neo4j/password
          - NEO4J_dbms_routing_listen__address=0.0.0.0:7688
      ports:
          - 7474:7474
          - 7473:7473
          - 7687:7687

# ----------------------------------------------------------------------------------------------

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    volumes:
      - ./data/:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - bdi_net

networks:
  bdi_net:
    driver: bridge

# ----------------------------------------------------------------------------------------------
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
  
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
  
volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver: